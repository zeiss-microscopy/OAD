# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: zen_api/workflows/v1beta/job_resources_service.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    TYPE_CHECKING,
    Dict,
    List,
    Optional,
)

import betterproto
import grpclib
from betterproto.grpc.grpclib_server import ServiceBase


if TYPE_CHECKING:
    import grpclib.server
    from betterproto.grpc.grpclib_client import MetadataLike
    from grpclib.metadata import Deadline


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetAvailableResourcesRequest(betterproto.Message):
    """The JobResourcesServiceGetAvailableResourcesRequest class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetAvailableResourcesResponse(betterproto.Message):
    """
    Response containing the list of all available resource workflow parameters.
    """

    resources: List[str] = betterproto.string_field(1)
    """The list of all available resource workflow parameters."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetBooleanValueRequest(betterproto.Message):
    """The JobResourcesServiceGetBooleanValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetBooleanValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: bool = betterproto.bool_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDateTimeValueRequest(betterproto.Message):
    """The JobResourcesServiceGetDateTimeValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDateTimeValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: str = betterproto.string_field(1)
    """The resource's date and time string value in ISO 8601 format."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDateValueRequest(betterproto.Message):
    """The JobResourcesServiceGetDateValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDateValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: str = betterproto.string_field(1)
    """The resource's date string value in ISO 8601 format."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDoubleValueRequest(betterproto.Message):
    """The JobResourcesServiceGetDoubleValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetDoubleValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: float = betterproto.double_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetFloatValueRequest(betterproto.Message):
    """The JobResourcesServiceGetFloatValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetFloatValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: float = betterproto.float_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetIntegerValueRequest(betterproto.Message):
    """The JobResourcesServiceGetIntegerValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetIntegerValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: int = betterproto.int32_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetLongValueRequest(betterproto.Message):
    """The JobResourcesServiceGetLongValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetLongValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: int = betterproto.int64_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetStringValueRequest(betterproto.Message):
    """The JobResourcesServiceGetStringValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetStringValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: str = betterproto.string_field(1)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetTimeValueRequest(betterproto.Message):
    """The JobResourcesServiceGetTimeValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceGetTimeValueResponse(betterproto.Message):
    """Response containing the resource's value."""

    value: str = betterproto.string_field(1)
    """The resource's time string value in ISO 8601 format."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceHasResourceRequest(betterproto.Message):
    """The JobResourcesServiceHasResourceRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceHasResourceResponse(betterproto.Message):
    """
    Response containing information if the current job has a resource with the specified ID.
    """

    has_resource: bool = betterproto.bool_field(1)
    """
    A value indicating whether the current job has a resource with the specified ID.
    """


@dataclass(eq=False, repr=False)
class JobResourcesServiceIsJobLoadedRequest(betterproto.Message):
    """The JobResourcesServiceIsJobLoadedRequest class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceIsJobLoadedResponse(betterproto.Message):
    """Response containing information if a job is loaded."""

    is_job_loaded: bool = betterproto.bool_field(1)
    """A value indicating whether a job is loaded."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetBooleanValueRequest(betterproto.Message):
    """The JobResourcesServiceSetBooleanValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: bool = betterproto.bool_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetBooleanValueResponse(betterproto.Message):
    """The JobResourcesServiceSetBooleanValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDateTimeValueRequest(betterproto.Message):
    """The JobResourcesServiceSetDateTimeValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: str = betterproto.string_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDateTimeValueResponse(betterproto.Message):
    """The JobResourcesServiceSetDateTimeValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDateValueRequest(betterproto.Message):
    """The JobResourcesServiceSetDateValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: str = betterproto.string_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDateValueResponse(betterproto.Message):
    """The JobResourcesServiceSetDateValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDoubleValueRequest(betterproto.Message):
    """The JobResourcesServiceSetDoubleValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: float = betterproto.double_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetDoubleValueResponse(betterproto.Message):
    """The JobResourcesServiceSetDoubleValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetFloatValueRequest(betterproto.Message):
    """The JobResourcesServiceSetFloatValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: float = betterproto.float_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetFloatValueResponse(betterproto.Message):
    """The JobResourcesServiceSetFloatValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetIntegerValueRequest(betterproto.Message):
    """The JobResourcesServiceSetIntegerValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: int = betterproto.int32_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetIntegerValueResponse(betterproto.Message):
    """The JobResourcesServiceSetIntegerValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetLongValueRequest(betterproto.Message):
    """The JobResourcesServiceSetLongValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: int = betterproto.int64_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetLongValueResponse(betterproto.Message):
    """The JobResourcesServiceSetLongValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetStringValueRequest(betterproto.Message):
    """The JobResourcesServiceSetStringValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: str = betterproto.string_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetStringValueResponse(betterproto.Message):
    """The JobResourcesServiceSetStringValueResponse class."""

    pass


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetTimeValueRequest(betterproto.Message):
    """The JobResourcesServiceSetTimeValueRequest class."""

    resource_id: str = betterproto.string_field(1)
    """The ID of the resource."""

    value: str = betterproto.string_field(2)
    """The resource's value."""


@dataclass(eq=False, repr=False)
class JobResourcesServiceSetTimeValueResponse(betterproto.Message):
    """The JobResourcesServiceSetTimeValueResponse class."""

    pass


class JobResourcesServiceStub(betterproto.ServiceStub):
    async def get_available_resources(
        self,
        job_resources_service_get_available_resources_request: "JobResourcesServiceGetAvailableResourcesRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetAvailableResourcesResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetAvailableResources",
            job_resources_service_get_available_resources_request,
            JobResourcesServiceGetAvailableResourcesResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_boolean_value(
        self,
        job_resources_service_get_boolean_value_request: "JobResourcesServiceGetBooleanValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetBooleanValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetBooleanValue",
            job_resources_service_get_boolean_value_request,
            JobResourcesServiceGetBooleanValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_date_time_value(
        self,
        job_resources_service_get_date_time_value_request: "JobResourcesServiceGetDateTimeValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetDateTimeValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetDateTimeValue",
            job_resources_service_get_date_time_value_request,
            JobResourcesServiceGetDateTimeValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_date_value(
        self,
        job_resources_service_get_date_value_request: "JobResourcesServiceGetDateValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetDateValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetDateValue",
            job_resources_service_get_date_value_request,
            JobResourcesServiceGetDateValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_double_value(
        self,
        job_resources_service_get_double_value_request: "JobResourcesServiceGetDoubleValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetDoubleValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetDoubleValue",
            job_resources_service_get_double_value_request,
            JobResourcesServiceGetDoubleValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_float_value(
        self,
        job_resources_service_get_float_value_request: "JobResourcesServiceGetFloatValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetFloatValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetFloatValue",
            job_resources_service_get_float_value_request,
            JobResourcesServiceGetFloatValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_integer_value(
        self,
        job_resources_service_get_integer_value_request: "JobResourcesServiceGetIntegerValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetIntegerValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetIntegerValue",
            job_resources_service_get_integer_value_request,
            JobResourcesServiceGetIntegerValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_long_value(
        self,
        job_resources_service_get_long_value_request: "JobResourcesServiceGetLongValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetLongValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetLongValue",
            job_resources_service_get_long_value_request,
            JobResourcesServiceGetLongValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_string_value(
        self,
        job_resources_service_get_string_value_request: "JobResourcesServiceGetStringValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetStringValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetStringValue",
            job_resources_service_get_string_value_request,
            JobResourcesServiceGetStringValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def get_time_value(
        self,
        job_resources_service_get_time_value_request: "JobResourcesServiceGetTimeValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceGetTimeValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/GetTimeValue",
            job_resources_service_get_time_value_request,
            JobResourcesServiceGetTimeValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def has_resource(
        self,
        job_resources_service_has_resource_request: "JobResourcesServiceHasResourceRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceHasResourceResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/HasResource",
            job_resources_service_has_resource_request,
            JobResourcesServiceHasResourceResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def is_job_loaded(
        self,
        job_resources_service_is_job_loaded_request: "JobResourcesServiceIsJobLoadedRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceIsJobLoadedResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/IsJobLoaded",
            job_resources_service_is_job_loaded_request,
            JobResourcesServiceIsJobLoadedResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_boolean_value(
        self,
        job_resources_service_set_boolean_value_request: "JobResourcesServiceSetBooleanValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetBooleanValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetBooleanValue",
            job_resources_service_set_boolean_value_request,
            JobResourcesServiceSetBooleanValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_date_time_value(
        self,
        job_resources_service_set_date_time_value_request: "JobResourcesServiceSetDateTimeValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetDateTimeValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetDateTimeValue",
            job_resources_service_set_date_time_value_request,
            JobResourcesServiceSetDateTimeValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_date_value(
        self,
        job_resources_service_set_date_value_request: "JobResourcesServiceSetDateValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetDateValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetDateValue",
            job_resources_service_set_date_value_request,
            JobResourcesServiceSetDateValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_double_value(
        self,
        job_resources_service_set_double_value_request: "JobResourcesServiceSetDoubleValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetDoubleValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetDoubleValue",
            job_resources_service_set_double_value_request,
            JobResourcesServiceSetDoubleValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_float_value(
        self,
        job_resources_service_set_float_value_request: "JobResourcesServiceSetFloatValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetFloatValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetFloatValue",
            job_resources_service_set_float_value_request,
            JobResourcesServiceSetFloatValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_integer_value(
        self,
        job_resources_service_set_integer_value_request: "JobResourcesServiceSetIntegerValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetIntegerValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetIntegerValue",
            job_resources_service_set_integer_value_request,
            JobResourcesServiceSetIntegerValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_long_value(
        self,
        job_resources_service_set_long_value_request: "JobResourcesServiceSetLongValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetLongValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetLongValue",
            job_resources_service_set_long_value_request,
            JobResourcesServiceSetLongValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_string_value(
        self,
        job_resources_service_set_string_value_request: "JobResourcesServiceSetStringValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetStringValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetStringValue",
            job_resources_service_set_string_value_request,
            JobResourcesServiceSetStringValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )

    async def set_time_value(
        self,
        job_resources_service_set_time_value_request: "JobResourcesServiceSetTimeValueRequest",
        *,
        timeout: Optional[float] = None,
        deadline: Optional["Deadline"] = None,
        metadata: Optional["MetadataLike"] = None
    ) -> "JobResourcesServiceSetTimeValueResponse":
        return await self._unary_unary(
            "/zen_api.workflows.v1beta.JobResourcesService/SetTimeValue",
            job_resources_service_set_time_value_request,
            JobResourcesServiceSetTimeValueResponse,
            timeout=timeout,
            deadline=deadline,
            metadata=metadata,
        )


class JobResourcesServiceBase(ServiceBase):

    async def get_available_resources(
        self,
        job_resources_service_get_available_resources_request: "JobResourcesServiceGetAvailableResourcesRequest",
    ) -> "JobResourcesServiceGetAvailableResourcesResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_boolean_value(
        self,
        job_resources_service_get_boolean_value_request: "JobResourcesServiceGetBooleanValueRequest",
    ) -> "JobResourcesServiceGetBooleanValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_date_time_value(
        self,
        job_resources_service_get_date_time_value_request: "JobResourcesServiceGetDateTimeValueRequest",
    ) -> "JobResourcesServiceGetDateTimeValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_date_value(
        self,
        job_resources_service_get_date_value_request: "JobResourcesServiceGetDateValueRequest",
    ) -> "JobResourcesServiceGetDateValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_double_value(
        self,
        job_resources_service_get_double_value_request: "JobResourcesServiceGetDoubleValueRequest",
    ) -> "JobResourcesServiceGetDoubleValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_float_value(
        self,
        job_resources_service_get_float_value_request: "JobResourcesServiceGetFloatValueRequest",
    ) -> "JobResourcesServiceGetFloatValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_integer_value(
        self,
        job_resources_service_get_integer_value_request: "JobResourcesServiceGetIntegerValueRequest",
    ) -> "JobResourcesServiceGetIntegerValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_long_value(
        self,
        job_resources_service_get_long_value_request: "JobResourcesServiceGetLongValueRequest",
    ) -> "JobResourcesServiceGetLongValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_string_value(
        self,
        job_resources_service_get_string_value_request: "JobResourcesServiceGetStringValueRequest",
    ) -> "JobResourcesServiceGetStringValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def get_time_value(
        self,
        job_resources_service_get_time_value_request: "JobResourcesServiceGetTimeValueRequest",
    ) -> "JobResourcesServiceGetTimeValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def has_resource(
        self,
        job_resources_service_has_resource_request: "JobResourcesServiceHasResourceRequest",
    ) -> "JobResourcesServiceHasResourceResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def is_job_loaded(
        self,
        job_resources_service_is_job_loaded_request: "JobResourcesServiceIsJobLoadedRequest",
    ) -> "JobResourcesServiceIsJobLoadedResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_boolean_value(
        self,
        job_resources_service_set_boolean_value_request: "JobResourcesServiceSetBooleanValueRequest",
    ) -> "JobResourcesServiceSetBooleanValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_date_time_value(
        self,
        job_resources_service_set_date_time_value_request: "JobResourcesServiceSetDateTimeValueRequest",
    ) -> "JobResourcesServiceSetDateTimeValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_date_value(
        self,
        job_resources_service_set_date_value_request: "JobResourcesServiceSetDateValueRequest",
    ) -> "JobResourcesServiceSetDateValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_double_value(
        self,
        job_resources_service_set_double_value_request: "JobResourcesServiceSetDoubleValueRequest",
    ) -> "JobResourcesServiceSetDoubleValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_float_value(
        self,
        job_resources_service_set_float_value_request: "JobResourcesServiceSetFloatValueRequest",
    ) -> "JobResourcesServiceSetFloatValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_integer_value(
        self,
        job_resources_service_set_integer_value_request: "JobResourcesServiceSetIntegerValueRequest",
    ) -> "JobResourcesServiceSetIntegerValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_long_value(
        self,
        job_resources_service_set_long_value_request: "JobResourcesServiceSetLongValueRequest",
    ) -> "JobResourcesServiceSetLongValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_string_value(
        self,
        job_resources_service_set_string_value_request: "JobResourcesServiceSetStringValueRequest",
    ) -> "JobResourcesServiceSetStringValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def set_time_value(
        self,
        job_resources_service_set_time_value_request: "JobResourcesServiceSetTimeValueRequest",
    ) -> "JobResourcesServiceSetTimeValueResponse":
        raise grpclib.GRPCError(grpclib.const.Status.UNIMPLEMENTED)

    async def __rpc_get_available_resources(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetAvailableResourcesRequest, JobResourcesServiceGetAvailableResourcesResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_available_resources(request)
        await stream.send_message(response)

    async def __rpc_get_boolean_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetBooleanValueRequest, JobResourcesServiceGetBooleanValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_boolean_value(request)
        await stream.send_message(response)

    async def __rpc_get_date_time_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetDateTimeValueRequest, JobResourcesServiceGetDateTimeValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_date_time_value(request)
        await stream.send_message(response)

    async def __rpc_get_date_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetDateValueRequest, JobResourcesServiceGetDateValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_date_value(request)
        await stream.send_message(response)

    async def __rpc_get_double_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetDoubleValueRequest, JobResourcesServiceGetDoubleValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_double_value(request)
        await stream.send_message(response)

    async def __rpc_get_float_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetFloatValueRequest, JobResourcesServiceGetFloatValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_float_value(request)
        await stream.send_message(response)

    async def __rpc_get_integer_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetIntegerValueRequest, JobResourcesServiceGetIntegerValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_integer_value(request)
        await stream.send_message(response)

    async def __rpc_get_long_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetLongValueRequest, JobResourcesServiceGetLongValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_long_value(request)
        await stream.send_message(response)

    async def __rpc_get_string_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetStringValueRequest, JobResourcesServiceGetStringValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_string_value(request)
        await stream.send_message(response)

    async def __rpc_get_time_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceGetTimeValueRequest, JobResourcesServiceGetTimeValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.get_time_value(request)
        await stream.send_message(response)

    async def __rpc_has_resource(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceHasResourceRequest, JobResourcesServiceHasResourceResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.has_resource(request)
        await stream.send_message(response)

    async def __rpc_is_job_loaded(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceIsJobLoadedRequest, JobResourcesServiceIsJobLoadedResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.is_job_loaded(request)
        await stream.send_message(response)

    async def __rpc_set_boolean_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetBooleanValueRequest, JobResourcesServiceSetBooleanValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_boolean_value(request)
        await stream.send_message(response)

    async def __rpc_set_date_time_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetDateTimeValueRequest, JobResourcesServiceSetDateTimeValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_date_time_value(request)
        await stream.send_message(response)

    async def __rpc_set_date_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetDateValueRequest, JobResourcesServiceSetDateValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_date_value(request)
        await stream.send_message(response)

    async def __rpc_set_double_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetDoubleValueRequest, JobResourcesServiceSetDoubleValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_double_value(request)
        await stream.send_message(response)

    async def __rpc_set_float_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetFloatValueRequest, JobResourcesServiceSetFloatValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_float_value(request)
        await stream.send_message(response)

    async def __rpc_set_integer_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetIntegerValueRequest, JobResourcesServiceSetIntegerValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_integer_value(request)
        await stream.send_message(response)

    async def __rpc_set_long_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetLongValueRequest, JobResourcesServiceSetLongValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_long_value(request)
        await stream.send_message(response)

    async def __rpc_set_string_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetStringValueRequest, JobResourcesServiceSetStringValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_string_value(request)
        await stream.send_message(response)

    async def __rpc_set_time_value(
        self,
        stream: "grpclib.server.Stream[JobResourcesServiceSetTimeValueRequest, JobResourcesServiceSetTimeValueResponse]",
    ) -> None:
        request = await stream.recv_message()
        response = await self.set_time_value(request)
        await stream.send_message(response)

    def __mapping__(self) -> Dict[str, grpclib.const.Handler]:
        return {
            "/zen_api.workflows.v1beta.JobResourcesService/GetAvailableResources": grpclib.const.Handler(
                self.__rpc_get_available_resources,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetAvailableResourcesRequest,
                JobResourcesServiceGetAvailableResourcesResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetBooleanValue": grpclib.const.Handler(
                self.__rpc_get_boolean_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetBooleanValueRequest,
                JobResourcesServiceGetBooleanValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetDateTimeValue": grpclib.const.Handler(
                self.__rpc_get_date_time_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetDateTimeValueRequest,
                JobResourcesServiceGetDateTimeValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetDateValue": grpclib.const.Handler(
                self.__rpc_get_date_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetDateValueRequest,
                JobResourcesServiceGetDateValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetDoubleValue": grpclib.const.Handler(
                self.__rpc_get_double_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetDoubleValueRequest,
                JobResourcesServiceGetDoubleValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetFloatValue": grpclib.const.Handler(
                self.__rpc_get_float_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetFloatValueRequest,
                JobResourcesServiceGetFloatValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetIntegerValue": grpclib.const.Handler(
                self.__rpc_get_integer_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetIntegerValueRequest,
                JobResourcesServiceGetIntegerValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetLongValue": grpclib.const.Handler(
                self.__rpc_get_long_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetLongValueRequest,
                JobResourcesServiceGetLongValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetStringValue": grpclib.const.Handler(
                self.__rpc_get_string_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetStringValueRequest,
                JobResourcesServiceGetStringValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/GetTimeValue": grpclib.const.Handler(
                self.__rpc_get_time_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceGetTimeValueRequest,
                JobResourcesServiceGetTimeValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/HasResource": grpclib.const.Handler(
                self.__rpc_has_resource,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceHasResourceRequest,
                JobResourcesServiceHasResourceResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/IsJobLoaded": grpclib.const.Handler(
                self.__rpc_is_job_loaded,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceIsJobLoadedRequest,
                JobResourcesServiceIsJobLoadedResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetBooleanValue": grpclib.const.Handler(
                self.__rpc_set_boolean_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetBooleanValueRequest,
                JobResourcesServiceSetBooleanValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetDateTimeValue": grpclib.const.Handler(
                self.__rpc_set_date_time_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetDateTimeValueRequest,
                JobResourcesServiceSetDateTimeValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetDateValue": grpclib.const.Handler(
                self.__rpc_set_date_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetDateValueRequest,
                JobResourcesServiceSetDateValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetDoubleValue": grpclib.const.Handler(
                self.__rpc_set_double_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetDoubleValueRequest,
                JobResourcesServiceSetDoubleValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetFloatValue": grpclib.const.Handler(
                self.__rpc_set_float_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetFloatValueRequest,
                JobResourcesServiceSetFloatValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetIntegerValue": grpclib.const.Handler(
                self.__rpc_set_integer_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetIntegerValueRequest,
                JobResourcesServiceSetIntegerValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetLongValue": grpclib.const.Handler(
                self.__rpc_set_long_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetLongValueRequest,
                JobResourcesServiceSetLongValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetStringValue": grpclib.const.Handler(
                self.__rpc_set_string_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetStringValueRequest,
                JobResourcesServiceSetStringValueResponse,
            ),
            "/zen_api.workflows.v1beta.JobResourcesService/SetTimeValue": grpclib.const.Handler(
                self.__rpc_set_time_value,
                grpclib.const.Cardinality.UNARY_UNARY,
                JobResourcesServiceSetTimeValueRequest,
                JobResourcesServiceSetTimeValueResponse,
            ),
        }
